@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            padding: 0;
        }

        .container {
            padding: 1em;
            font-family: sans-serif;
        }

        h1, h2, h3 {
            text-align: center;
        }

        h1 {
            margin-bottom: 0.5em;
        }

        h3 {
            color: blue;
            cursor: pointer;
            font-size: 0.8em;
        }

        #encounter-combatant-list {
            width: 100%;
            max-width: 1080px;
            margin: 0 auto;
            font-family: sans-serif;
        }

        #encounter-combatant-list-header th {
            padding: 0.5em;
        }

        .encounter-combatant {
            width: 100%;
        }

        #encounter-combatant-list td {
            padding: 1em;
            text-align: left;
            border-top: 1px solid #8b0000;
        }

        #add-new-encounter-combatant td {
            text-align: center;
        }

        #encounter-combatant-list .encounter-combatant-initiative,
        #encounter-combatant-list .encounter-combatant-hp {
            text-align: center;
        }

        #encounter-combatant-list .encounter-combatant-add,
        #encounter-combatant-list .encounter-combatant-remove {
            text-align: center;
        }

        button {
            border-radius: 0.5em;
            padding: 1em 1em;
            font-size: 0.8em;
            cursor: pointer;
        }

            button#add-combatant-button {
                background-color: #FFD700;
                border-color: #FFD700;
            }

            button#encounter-combatant-remove {
                background-color: #DC143C; 
                border-color: #DC143C;
            }

        input {
            padding: 0.5em;
        }

        .hidden {
            display: none;
        }
    </style>
</head>
<body>
            <div class="container">
                <h1>Encounter Initiative Tracker</h1>
                    <h2>Click a header to sort!</h2>
            </div>
            <table id="encounter-combatant-list" cellspacing="0">
                <thead>
                    <tr id="encounter-combatant-list-titles">
                        <th>Initiative</th>
                        <th>Name</th>
                        <th>HP</th>
                    </tr>
                </thead>
                <tbody>
                    <tr id="add-new-encounter-combatant">
                        <td class="encounter-combatant-initiative">
                            <input type="number" />
                        </td>
                        <td class="encounter-combatant-name">
                            <input type="text" />
                        </td>
                        <td class="encounter-combatant-hp">
                            <input type="number" />
                        </td>
                        <td class="encounter-combatant-add">
                            <button id="add-combatant-button"><i class="button"></i> Add</button>
                        </td>
                    </tr>
                </tbody>
            </table>
</body>

@section scripts {
    <script>
        $(document).ready(function () {
            var Combatant = function (name, initiative, hp) {
                this.name = name || "";
                this.initiative = initiative || 0;
                this.hp = hp || 0;

                this.appendTo = function (target) {
                    var thisObj = this;
                    var inserted = false;
                    var str = "";
                    str += "<tr class='encounter-combatant' data-init='" + this.initiative + "'>";
                    str += "<td class='encounter-combatant-initiative' contenteditable>" + this.initiative + "</td>";
                    str += "<td class='encounter-combatant-name' contenteditable>" + this.name + "</td>";
                    str += "<td class='encounter-combatant-hp' contenteditable>" + this.hp + "</td>";
                    str += "<td class='encounter-combatant-remove'><button><i class='button'></i> Remove</button></td>";
                    str += "</tr>";

                    $(str).insertBefore($('#add-new-encounter-combatant'));
                    inserted = true;

                }
            }

            $('#add-combatant-button').on('click', function () {
                //get values
                var init = $('#add-new-encounter-combatant .encounter-combatant-initiative input').val();
                var name = $('#add-new-encounter-combatant .encounter-combatant-name input').val();
                var hp = $('#add-new-encounter-combatant .encounter-combatant-hp input').val();;

                //create and append combatant
                var combatant = new Combatant(name, init, hp);
                combatant.appendTo('#encounter-combatant-list tbody');

                //clear inputs
                $('input').not(':button, :submit, :reset, :hidden').val('').removeAttr('checked').removeAttr('selected');
            })

            $('#encounter-combatant-list').on('click', '.encounter-combatant-remove button', function () {
                $(this).closest('.encounter-combatant').remove();
            });

            $('#encounter-combatant-list').on('blur', ".encounter-combatant .encounter-combatant-initiative", function () {
                reinsertIntoCombatantList($(this).closest('.encounter-combatant'));
            })

            function reinsertIntoCombatantList(combatant) {
                var init = combatant.find('.encounter-combatant-initiative').html();
                var name = combatant.find('.encounter-combatant-name').html();
                var hp = combatant.find('.encounter-combatant-hp').html();
                combatant.remove();

                var newCombatant = new Combatant(init, name, hp);
                newCombatant.appendTo('encounter-combatant-list tbody');
            }
            //to sort the table
            $('th').click(function () {
                var table = $(this).parents('table').eq(0)
                var rows = table.find('tr:gt(0)').toArray().sort(comparer($(this).index()))
                this.asc = !this.asc
                if (!this.asc) { rows = rows.reverse() }
                for (var i = 0; i < rows.length; i++) { table.append(rows[i]) }
            })
            function comparer(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index)
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.toString().localeCompare(valB)
                }
            }
            function getCellValue(row, index) { return $(row).children('td').eq(index).text() }
        })
</script>
}